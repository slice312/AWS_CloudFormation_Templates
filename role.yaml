AWSTemplateFormatVersion: 2010-09-09
Description: EC2 Role for DynamoDB service

Resources:
  IAMRoleEC2DynamoDBFullAccess:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ec2-dynamodb-full-access
      Description: Allow EC2 full access for DynamoDB service
      AssumeRolePolicyDocument:
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "dynamodb:*",
                "dax:*",
                "application-autoscaling:DeleteScalingPolicy",
                "application-autoscaling:DeregisterScalableTarget",
                "application-autoscaling:DescribeScalableTargets",
                "application-autoscaling:DescribeScalingActivities",
                "application-autoscaling:DescribeScalingPolicies",
                "application-autoscaling:PutScalingPolicy",
                "application-autoscaling:RegisterScalableTarget",
                "cloudwatch:DeleteAlarms",
                "cloudwatch:DescribeAlarmHistory",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DescribeAlarmsForMetric",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics",
                "cloudwatch:PutMetricAlarm",
                "cloudwatch:GetMetricData",
                "datapipeline:ActivatePipeline",
                "datapipeline:CreatePipeline",
                "datapipeline:DeletePipeline",
                "datapipeline:DescribeObjects",
                "datapipeline:DescribePipelines",
                "datapipeline:GetPipelineDefinition",
                "datapipeline:ListPipelines",
                "datapipeline:PutPipelineDefinition",
                "datapipeline:QueryObjects",
                "ec2:DescribeVpcs",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "iam:GetRole",
                "iam:ListRoles",
                "kms:DescribeKey",
                "kms:ListAliases",
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:ListSubscriptions",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTopics",
                "sns:Subscribe",
                "sns:Unsubscribe",
                "sns:SetTopicAttributes",
                "lambda:CreateFunction",
                "lambda:ListFunctions",
                "lambda:ListEventSourceMappings",
                "lambda:CreateEventSourceMapping",
                "lambda:DeleteEventSourceMapping",
                "lambda:GetFunctionConfiguration",
                "lambda:DeleteFunction",
                "resource-groups:ListGroups",
                "resource-groups:ListGroupResources",
                "resource-groups:GetGroup",
                "resource-groups:GetGroupQuery",
                "resource-groups:DeleteGroup",
                "resource-groups:CreateGroup",
                "tag:GetResources",
                "kinesis:ListStreams",
                "kinesis:DescribeStream",
                "kinesis:DescribeStreamSummary"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "cloudwatch:GetInsightRuleReport",
              "Effect": "Allow",
              "Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
            },
            {
              "Action": [
                "iam:PassRole"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Condition": {
                "StringLike": {
                  "iam:PassedToService": [
                    "application-autoscaling.amazonaws.com",
                    "application-autoscaling.amazonaws.com.cn",
                    "dax.amazonaws.com"
                  ]
                }
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:CreateServiceLinkedRole"
              ],
              "Resource": "*",
              "Condition": {
                "StringEquals": {
                  "iam:AWSServiceName": [
                    "replication.dynamodb.amazonaws.com",
                    "dax.amazonaws.com",
                    "dynamodb.application-autoscaling.amazonaws.com",
                    "contributorinsights.dynamodb.amazonaws.com",
                    "kinesisreplication.dynamodb.amazonaws.com"
                  ]
                }
              }
            }
          ]
        }
#        Version: "2012-10-17"
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service:
#                - ec2.amazonaws.com
#            Action:
#              - "sts:AssumeRole"
#      Policies:
#        - PolicyName: DynamoDBFullAccess
##          
#  ThisServicePolicy:
#    Type: AWS::IAM::ManagedPolicy
#    Properties:
#      Assum
#      ManagedPolicyName: SomePolicyName
#      PolicyDocument:
#        Version: "2012-10-17"
#        Statement:
#          - Effect: "Allow"
#            Action:
#              - "dynamodb:GetItem"
#              - "dynamodb:BatchGetItem"
#              - "dynamodb:Query"
#            Resource: "*"
#          